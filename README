Todo
----

- bugs, misc

  - std.fmt.date.ymdhm should omit the 'hm' if the hour is exactly midnight.
  x /user/{user}/brew/{id}?type={type} doesn't work.
  x with validation error on step addition, the form is correctly populated, but collapsed

- add steps
  - buy ingredients
  - make starter
  - fwh

- shitty things
  - recipe_new()
  - brew()
  - toggled <div> py:attrs style form mumble.

- calendaring

  x upcoming events list/cal

  - if a "future" action gets updated in time, what happens to other future actions after it?
    - nothing
    - they're moved forward in time by the same delta-T they had before the update (nifty, but maybe wrong.)
      - then make it some policy of the type of future step?  Ferm vs. keg vs. …?
    - make them all immediately after the new step.

  - next step types += first future step for update

  - encourage future steps visually, … how?

  - "standard" ferm schedules?
    - 1 wk primary, 2 wk secondary
    - style-based?

  - what can be done in the future?
    - steps
    - brews?
      - or just a brew steps

  x add "future" sub-body to table
    - visually/functionally distinct how?


- focus improvements
  - /user/{user} 
    - next action

  - /recipe/{id}/{text}
    x top actions
    x edit details -> :input:first
    x add -> first form elt
    _ GET after POST of {grain, hop, …} -> [add] button on same form.

  x login form

  x /user/{user}/brew/{id}
    x page load -> "edit brew details"
    x add step -> first step form
    x step form cancel -> "edit brew details"

- computed values
  - efficiency
    - "?mumble?" vs. "brewhouse" efficiency
    x need: grains + gravity readings + volume reading
    - efficiency tracker...
  - A/V
    - estimated: fn(grains, efficiency, yeast.attenuation)
    x actual: FG - OG
  - OG
    - estimated: fn(grains, efficiency, yeast.attenuation)
    - actual: gravity at 'pitch'
  - FG
    - estimated: fn(grains, est_OG, yeast.attenuation)
    - actual: latest post-'pitch' gravity reading
  - IBU: 
    - estimated: fn(hop schedule)
    - actual: none
  - SRM
    - estimated: fn(grains)
    - actual: none (manual entry)
  - timing
    - brew day
    - fermentation
  - mash chart/schedule
    - planned
    - actual

- form validation
  x actual submission logic
  - visual (see Yahoo patterns)
  - client-side validation

- shopping list
  - http://beeradvocate.com/forum/read/1102362#1102497

- use django `get_absolute_url`, `permalink` methods.

x remove /user/{user}/recipes/, fold into /user/{user}/

x turn </recipe/{id}> into </recipe/{id}/{safe(name)}>

- data
  x grain
  x hops
  x yeasts
  - adjuncts
  - yeast 2
    - dry yeasts (Safale, Windsor, &c.)
    - Wyeast: wine, distiller, cider, mead, sake, VSS archives

- model cleanups
  - Brew
    - add brew name?
    - must Brews have recipes?
    x remove recipe_name
    x recipe(_text) -> notes
    x recipe_id -> recipe

  - RecipeGrain 
    x fractional amounts

  - RecipeHop
    x fractional amounts

  - Hops
    - type: bittering? flavor? aroma?
    - class: german, american, british
    - notes: "floral, citrusy, &c."

- user-friendly field values ("gl" -> "gallon(s)")

x /recipe/new/
  x remove "derived from" control?

- recipe editing
  x generalize delete handling
  - pre-select units fields
    - same as the last-used units in the item-class
    - prefs

- auth
  / general 'edit-controls-for-authorized-editor'
    - /user/{user}/ -> starred, recipe actions, controls
  - generic 'auth-user-must-match-object-owner' during POST handling
  - superuser support all around

- signup
  - username character restrictions

- visual design
  - logo/identity
    - typeface-based
    - beer mug ring/stain
    - graph paper = journal
  - how wide are tables normally?  90%?  80%?

  - steal "Actions" table from <https://launchpad.net/bzr-rebase>
    - recipe actions?
    - brew actions?

  - brew next steps list: only show most likely, hide rest behind "(more…)"

- user interface
  - abbrev -> full label in views
  - auto-complete text fields for style, grain, hops...

- starring recipes
  x add (-> star) action to recipe lists
  x add (-> star) action to recipe view
  - make AJAX-y

x move recipes to /recipe/{id}/

x brew/recipe integration
  x model Brew -> Recipe
  x create Brew from Recipe

x better "next step" computation from improved structure
  x tied into state_types modeling rework?

- /user/jsled/brew/42
  x Hide 'add step' form until requested

- /recipe/{id}
  - show all brew instances of recipe
    - by: authoring user, viewing user, all users
  x add "clone", "brew" ui options

- TwoLevelSelectWidget
  - cleanup, review
  - use for
    - hops
    x grains
    x yeast

- paginated views
  - historical brews
  - all authored recipes

- step addition
  - de-emphasise unrelated entry fields in any given step-type.
  - better form layout, anyways.

- better auth
  - OpenID
  - verification
  - forgot password
  - forgot username

- system logging
  - per request/timing
  - general system
  - auth-related

/ step type constraint
  x break out step options based on current state of brew instance
  / better step_type modeling dervied to options,constraints,labels,&c.

- recipe browse/search
  - browsing
  - searching
    - structured, by ingredient/style/&c.

- refactor rendering
  - starred-recipe table on /user/jsled/ and /user/jsled/recipe/

- deletion
  - recipe
  - brew

- game
  - user must be able to turn this off, but defaults to on
  - achievements
    - First Brew in ${style}
    - {x100} gallons brewed
    - {10,25,50,100,150,…} brews complete
    - {75,80,85,90,95,>95} efficiency
    - {5,6,7,9,10} abv
    - First {1.060,70,80,90,100} OG brew
    - Brewing for {1,2,3,…} years.

- user profile
  - other web url
  - preferences 
    - default recipe type (extract, partial-mash, all-grain)
    - default units (english/metric)
    - favorite style

- user addition of recipe components
  - yeasts
  - grains/fermentable
  - hops

- alerts
  - "keg now!"
  - "rack this week?"

- comments
  - OpenID support

- widget-style embedding
  - brew overview
  - upcoming brews

- recipe editing
  x regular browser
  - clone from other URL
  - star from other URL
  - parse block of text

- keyboard navigation
  - j/k should navigate between displayed table rows, jumping between tables.
  - 'g {location}' paradigm?
  - '?' overlay

- import/export

- add 'equipment'/'rig'

- use the following style of the Google Reader "note this URL" bookmarklet for on-the-web recipe induction:
    javascript:
    var b=document.body;
    var GR________bookmarklet_domain='http://www.google.com';
    if(b&&!document.xmlVersion){
    void(z=document.createElement('script'));
    void(z.src='http://www.google.com/reader/ui/link-bookmarklet.js');
    void(b.appendChild(z));
    }
    else{}

----------

Colors
------

Base green: rgb(34, 140, 34) (#228C22)

<http://wellstyled.com/tools/colorscheme2/index-en.html#>, triad:

green: #228C22
dark: #186218
light: #CFFFCF
bright: #9EFF9E

purple: #8C2272
dark: #62184F
light: #FFCFF3
bright: #FF9EE7

brown: #8C4C22
dark: #623518
light: #FFE2CF
bright: #FFC59E


<http://www.easyrgb.com/index.php?X=HARM#Result>:
nice blue/purple/grey: #6977B0
nice soft green: #75B368

Done
----

x rename: brewlog -> brew-journal
x brew doneness/state
x brew last-update-step inclusion
x brew sorting on main page
  x finished vs. upcoming, date-order
x brew status, last-update date
x some way to edit existing brew details
x projected/upcoming brew date
x site templating/skinning
x unicode support/problem
x login, user
x users
  x login/logout
  x auth checks for actions
    x create/edit brews
    x create/edit brew steps
  x create new user
x admin security
x gravity temperature adjustment
  x related to units work
  x should always store at 60°, but record record temp, too.
x /user/${user}/brew/new
  x no need for 'brewer' field.

Bugs
----
x Recipe* amounts can't be sub-integer, which makes it hard to have "0.5 oz" of hops. :(

Weirdness
---------
- when journaling after racking to secondary, is it entered as primary-ferm or secondary-ferm?
